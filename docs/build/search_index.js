var documenterSearchIndex = {"docs":
[{"location":"#GenSerialization.jl","page":"API","title":"GenSerialization.jl","text":"","category":"section"},{"location":"","page":"API","title":"API","text":"WIP tool to serialize Gen.jl traces using Julia's serialization library. Gen.jl traces often contain ephemeral data related to the generative model (a function), and this script decouples their dependency. Both traced and untraced randomness are considered.","category":"page"},{"location":"#Installation","page":"API","title":"Installation","text":"","category":"section"},{"location":"","page":"API","title":"API","text":"The package can be installed with the Julia package manager. From the Julia REPL, type ] to enter the Pkg REPL mode and then run:","category":"page"},{"location":"","page":"API","title":"API","text":"pkg> add https://github.com/probcomp/GenSerialization.jl.git","category":"page"},{"location":"","page":"API","title":"API","text":"To test the installation locally, you can run the tests with:","category":"page"},{"location":"","page":"API","title":"API","text":"using Pkg; Pkg.test(\"Gen\")","category":"page"},{"location":"#Getting-Started","page":"API","title":"Getting Started","text":"","category":"section"},{"location":"","page":"API","title":"API","text":"We can serialize a trace using the serialize function to a file.","category":"page"},{"location":"","page":"API","title":"API","text":"using Gen\nusing GenSerialization\n\n@gen function model(p) \n    x ~ bernoulli(p)\nend\n\ntrace = simulate(model, (0.2))\nserialize(\"coin_flip.gen\", trace)","category":"page"},{"location":"","page":"API","title":"API","text":"Now we can read back the trace.","category":"page"},{"location":"","page":"API","title":"API","text":"saved_trace = deserialize(\"coin_flip.gen\", model)","category":"page"}]
}
